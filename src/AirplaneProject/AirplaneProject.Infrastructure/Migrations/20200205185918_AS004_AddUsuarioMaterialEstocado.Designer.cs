// <auto-generated />
using System;
using AirplaneProject.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirplaneProject.Infrastructure.Migrations
{
    [DbContext(typeof(GestaoEsdContext))]
    [Migration("20200205185918_AS004_AddUsuarioMaterialEstocado")]
    partial class AS004_AddUsuarioMaterialEstocado
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Automacao.Domain.Models.Agente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Agentes");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Almoxarifado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CodigoSAP")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_Almoxarifados_Codigo");

                    b.HasIndex("CodigoSAP")
                        .IsUnique()
                        .HasName("IX_Almoxarifados_CodigoSAP");

                    b.ToTable("Almoxarifados");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Alteracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AprovadorId");

                    b.Property<int?>("AutorizadorId");

                    b.Property<int>("CamadaId");

                    b.Property<string>("ChaveUsuario")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("Checksum")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DataEvento");

                    b.Property<DateTime>("DataRegistro");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("DescricaoCodigo");

                    b.Property<int?>("ExecutorId")
                        .IsRequired();

                    b.Property<int>("FinalidadeId");

                    b.Property<int>("FuncaoId");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("SistemaId");

                    b.Property<int>("SituacaoId");

                    b.Property<int>("SolicitanteId");

                    b.Property<int>("UepId");

                    b.Property<int?>("VerificadorId");

                    b.HasKey("Id");

                    b.HasIndex("AprovadorId");

                    b.HasIndex("AutorizadorId");

                    b.HasIndex("CamadaId");

                    b.HasIndex("ExecutorId");

                    b.HasIndex("FinalidadeId");

                    b.HasIndex("FuncaoId");

                    b.HasIndex("SistemaId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("SolicitanteId");

                    b.HasIndex("UepId");

                    b.HasIndex("VerificadorId");

                    b.ToTable("Alteracoes");
                });

            modelBuilder.Entity("Automacao.Domain.Models.AnpNivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AnpNiveis");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Ativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("UnidadeOperativaId");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_Ativos_Codigo");

                    b.HasIndex("UnidadeOperativaId");

                    b.ToTable("Ativos");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Camada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Camadas_Codigo");

                    b.ToTable("Camadas");
                });

            modelBuilder.Entity("Automacao.Domain.Models.CategoriaMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_CategoriaMaterials_Codigo");

                    b.ToTable("CategoriaMateriais");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Causa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Causas_Codigo");

                    b.ToTable("Causas");
                });

            modelBuilder.Entity("Automacao.Domain.Models.ClasseMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaMaterialId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CategoriaMaterialId");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_ClasseMaterials_Codigo");

                    b.ToTable("ClasseMateriais");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Esd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alarme")
                        .HasMaxLength(20);

                    b.Property<string>("AlarmeCodigo")
                        .HasMaxLength(20);

                    b.Property<string>("ChaveUsuario")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<DateTime>("DataEvento");

                    b.Property<DateTime>("DataRegistro");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("DescricaoCodigo")
                        .HasMaxLength(512);

                    b.Property<int>("EventoIniciadorId");

                    b.Property<string>("LinkCadinc")
                        .HasMaxLength(255);

                    b.Property<string>("LinkGip")
                        .HasMaxLength(255);

                    b.Property<string>("LinkRta")
                        .HasMaxLength(255);

                    b.Property<string>("LinkSitop")
                        .HasMaxLength(255);

                    b.Property<int>("MotivoCausaId");

                    b.Property<int>("NivelOperacaoId");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("OrigemAgenteId");

                    b.Property<int>("SituacaoId");

                    b.Property<int?>("UepAlmoxarifadoId");

                    b.Property<int>("UepId");

                    b.HasKey("Id");

                    b.HasIndex("AlarmeCodigo")
                        .HasName("IX_Esds_AlarmeCodigo");

                    b.HasIndex("DescricaoCodigo")
                        .HasName("IX_Esds_Codigo");

                    b.HasIndex("EventoIniciadorId");

                    b.HasIndex("MotivoCausaId");

                    b.HasIndex("NivelOperacaoId");

                    b.HasIndex("OrigemAgenteId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("UepAlmoxarifadoId");

                    b.HasIndex("UepId");

                    b.ToTable("Esds");
                });

            modelBuilder.Entity("Automacao.Domain.Models.EsdArquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EsdId");

                    b.Property<string>("NomeArquivo");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EsdId");

                    b.HasIndex("Url")
                        .HasName("IX_EsdArquivos_Url");

                    b.ToTable("EsdArquivos");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Eventos_Codigo");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Automacao.Domain.Models.EventoIniciador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventoId");

                    b.Property<int>("IniciadorId");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("IniciadorId");

                    b.ToTable("EventoIniciadores");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("CodigoSAP")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_Fabricantes_Codigo");

                    b.ToTable("Fabricantes");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Finalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Finalidades_Codigo");

                    b.ToTable("Finalidades");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Funcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Funcoes_Codigo");

                    b.ToTable("Funcoes");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alarme")
                        .HasMaxLength(20);

                    b.Property<string>("ChaveUsuario")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataEvento");

                    b.Property<DateTime>("DataRegistro");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("DescricaoCodigo")
                        .HasMaxLength(512);

                    b.Property<int>("EsdId");

                    b.Property<int>("EventoIniciadorId");

                    b.Property<string>("LinkCadinc")
                        .HasMaxLength(255);

                    b.Property<string>("LinkGip")
                        .HasMaxLength(255);

                    b.Property<string>("LinkRta")
                        .HasMaxLength(255);

                    b.Property<string>("LinkSitop")
                        .HasMaxLength(255);

                    b.Property<int>("MotivoCausaId");

                    b.Property<int>("NivelOperacaoId");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("OrigemAgenteId");

                    b.Property<int>("SituacaoId");

                    b.Property<int?>("UepAlmoxarifadoId");

                    b.Property<int>("UepId");

                    b.HasKey("Id");

                    b.HasIndex("DescricaoCodigo")
                        .HasName("IX_Historicos_Codigo");

                    b.HasIndex("EsdId");

                    b.HasIndex("EventoIniciadorId");

                    b.HasIndex("MotivoCausaId");

                    b.HasIndex("NivelOperacaoId");

                    b.HasIndex("OrigemAgenteId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("UepAlmoxarifadoId");

                    b.HasIndex("UepId");

                    b.ToTable("Historicos");
                });

            modelBuilder.Entity("Automacao.Domain.Models.HistoricoAlteracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlteracaoId");

                    b.Property<int?>("AprovadorId");

                    b.Property<int?>("AutorizadorId");

                    b.Property<int>("CamadaId");

                    b.Property<string>("ChaveUsuario")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("Checksum")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DataAlteracao");

                    b.Property<DateTime>("DataEvento");

                    b.Property<DateTime>("DataRegistro");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<int?>("ExecutorId")
                        .IsRequired();

                    b.Property<int>("FinalidadeId");

                    b.Property<int>("FuncaoId");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("SistemaId");

                    b.Property<int>("SituacaoId");

                    b.Property<int>("SolicitanteId");

                    b.Property<int>("UepId");

                    b.Property<int?>("VerificadorId");

                    b.HasKey("Id");

                    b.HasIndex("AlteracaoId");

                    b.HasIndex("AprovadorId");

                    b.HasIndex("AutorizadorId");

                    b.HasIndex("CamadaId");

                    b.HasIndex("ExecutorId");

                    b.HasIndex("FinalidadeId");

                    b.HasIndex("FuncaoId");

                    b.HasIndex("SistemaId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("SolicitanteId");

                    b.HasIndex("UepId");

                    b.HasIndex("VerificadorId");

                    b.ToTable("HistoricoAlteracoes");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Iniciador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Iniciadores_Codigo");

                    b.ToTable("Iniciadores");
                });

            modelBuilder.Entity("Automacao.Domain.Models.MaterialEstocado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlmoxarifadoId");

                    b.Property<string>("ChaveUsuario")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<DateTime>("DataRegistro");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<int>("MaterialFornecidoId");

                    b.Property<double>("Maximo");

                    b.Property<double>("Minimo");

                    b.Property<int?>("MrpId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double>("QuantidadeEstoque");

                    b.Property<int>("SituacaoMaterialId");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoId");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_MaterialEstocados_Codigo");

                    b.HasIndex("MaterialFornecidoId");

                    b.HasIndex("MrpId");

                    b.HasIndex("SituacaoMaterialId");

                    b.ToTable("MaterialEstocados");
                });

            modelBuilder.Entity("Automacao.Domain.Models.MaterialFornecido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClasseMaterialId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("CodigoConsultaSap")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<int>("FabricanteId");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ClasseMaterialId");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_MaterialFornecidos_Codigo");

                    b.HasIndex("CodigoConsultaSap")
                        .IsUnique()
                        .HasName("IX_MaterialFornecidos_CodigoConsultaSap");

                    b.HasIndex("FabricanteId");

                    b.ToTable("MaterialFornecidos");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Motivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Motivos_Codigo");

                    b.ToTable("Motivos");
                });

            modelBuilder.Entity("Automacao.Domain.Models.MotivoCausa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CausaId");

                    b.Property<int>("MotivoId");

                    b.HasKey("Id");

                    b.HasIndex("CausaId");

                    b.HasIndex("MotivoId");

                    b.ToTable("MotivoCausas");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Mrp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Campo")
                        .HasMaxLength(255);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Operador")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Mrps_Codigo");

                    b.ToTable("Mrps");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnpNivelId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("AnpNivelId");

                    b.HasIndex("Codigo")
                        .HasName("IX_Niveis_Codigo");

                    b.ToTable("Niveis");
                });

            modelBuilder.Entity("Automacao.Domain.Models.NivelOperacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NivelId");

                    b.Property<int>("OperacaoId");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.HasIndex("OperacaoId");

                    b.ToTable("NivelOperacoes");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Operacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Operacoes");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Origem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Origens_Codigo");

                    b.ToTable("Origens");
                });

            modelBuilder.Entity("Automacao.Domain.Models.OrigemAgente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenteId");

                    b.Property<int>("OrigemId");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("OrigemId");

                    b.ToTable("OrigemAgentes");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Profissional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Chave")
                        .HasName("IX_Profissionais_Chave");

                    b.ToTable("Profissionais");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Sistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Sistemas_Codigo");

                    b.ToTable("Sistemas");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Situacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Situacoes_Codigo");

                    b.ToTable("Situacoes");
                });

            modelBuilder.Entity("Automacao.Domain.Models.SituacaoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_SituacaoMateriais_Codigo");

                    b.ToTable("SituacaoMateriais");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Uep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AtivoId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("OperacaoId");

                    b.Property<int>("UepTipoId");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_Ueps_Codigo");

                    b.HasIndex("OperacaoId");

                    b.HasIndex("UepTipoId");

                    b.ToTable("Ueps");
                });

            modelBuilder.Entity("Automacao.Domain.Models.UepAlmoxarifado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlmoxarifadoId");

                    b.Property<int>("UepId");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoId");

                    b.HasIndex("UepId");

                    b.ToTable("UepAlmoxarifados");
                });

            modelBuilder.Entity("Automacao.Domain.Models.UepTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_UepTipos_Codigo");

                    b.ToTable("UepTipos");
                });

            modelBuilder.Entity("Automacao.Domain.Models.UnidadeOperativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_UnidadesOperativas_Codigo");

                    b.ToTable("UnidadesOperativas");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Views.AlteracaoView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AprovadorChave")
                        .HasMaxLength(50);

                    b.Property<int?>("AprovadorId");

                    b.Property<string>("AprovadorNome")
                        .HasMaxLength(50);

                    b.Property<string>("AtivoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("AtivoId");

                    b.Property<string>("AtivoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AutorizadorChave")
                        .HasMaxLength(50);

                    b.Property<int?>("AutorizadorId");

                    b.Property<string>("AutorizadorNome")
                        .HasMaxLength(50);

                    b.Property<string>("CamadaCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("CamadaId");

                    b.Property<string>("CamadaNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Checksum")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DataEvento");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("DescricaoCodigo")
                        .HasMaxLength(1024);

                    b.Property<string>("ExecutorChave")
                        .HasMaxLength(50);

                    b.Property<int?>("ExecutorId");

                    b.Property<string>("ExecutorNome")
                        .HasMaxLength(50);

                    b.Property<string>("FinalidadeCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("FinalidadeId");

                    b.Property<string>("FinalidadeNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FuncaoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("FuncaoId");

                    b.Property<string>("FuncaoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SistemaCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SistemaId");

                    b.Property<string>("SistemaNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SituacaoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SituacaoId");

                    b.Property<string>("SituacaoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SolicitanteChave")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SolicitanteId");

                    b.Property<string>("SolicitanteNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UepCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UepId");

                    b.Property<string>("UepNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UnidadeCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UnidadeId");

                    b.Property<string>("UnidadeNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("VerificadorChave")
                        .HasMaxLength(50);

                    b.Property<int?>("VerificadorId");

                    b.Property<string>("VerificadorNome")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("vwAlteracao");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Views.ConclusaoAlteracaoView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtivoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("AtivoId");

                    b.Property<string>("AtivoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DataEvento");

                    b.Property<string>("SituacaoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SituacaoId");

                    b.Property<string>("SituacaoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UepCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UepId");

                    b.Property<string>("UepNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UnidadeCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UnidadeId");

                    b.Property<string>("UnidadeNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("vwConclusaoAlteracao");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Views.EsdView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgenteCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("AgenteId");

                    b.Property<string>("AgenteNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Alarme")
                        .HasMaxLength(20);

                    b.Property<string>("AlarmeCodigo")
                        .HasMaxLength(20);

                    b.Property<string>("AtivoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("AtivoId");

                    b.Property<string>("AtivoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CausaCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("CausaId");

                    b.Property<string>("CausaNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DataEvento");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("DescricaoCodigo")
                        .HasMaxLength(1024);

                    b.Property<string>("EventoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("EventoId");

                    b.Property<int>("EventoIniciadorId");

                    b.Property<string>("EventoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("IniciadorCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("IniciadorId");

                    b.Property<string>("IniciadorNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LinkCadinc")
                        .HasMaxLength(255);

                    b.Property<string>("LinkGip")
                        .HasMaxLength(255);

                    b.Property<string>("LinkRta")
                        .HasMaxLength(255);

                    b.Property<string>("LinkSitop")
                        .HasMaxLength(255);

                    b.Property<int>("MotivoCausaId");

                    b.Property<string>("MotivoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("MotivoId");

                    b.Property<string>("MotivoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NivelCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("NivelId");

                    b.Property<string>("NivelNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("NivelOperacaoId");

                    b.Property<int>("OrigemAgenteId");

                    b.Property<string>("OrigemCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("OrigemId");

                    b.Property<string>("OrigemNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SituacaoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SituacaoId");

                    b.Property<string>("SituacaoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UepCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UepId");

                    b.Property<string>("UepNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UnidadeCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UnidadeId");

                    b.Property<string>("UnidadeNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("vwEsd");
                });

            modelBuilder.Entity("Automacao.Domain.Models.Alteracao", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Profissional", "Aprovador")
                        .WithMany()
                        .HasForeignKey("AprovadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Profissional", "Autorizador")
                        .WithMany()
                        .HasForeignKey("AutorizadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Camada", "Camada")
                        .WithMany("Alteracoes")
                        .HasForeignKey("CamadaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Profissional", "Executor")
                        .WithMany()
                        .HasForeignKey("ExecutorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Finalidade", "Finalidade")
                        .WithMany("Alteracoes")
                        .HasForeignKey("FinalidadeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Funcao", "Funcao")
                        .WithMany("Alteracoes")
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Sistema", "Sistema")
                        .WithMany("Alteracoes")
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Situacao", "Situacao")
                        .WithMany("Alteracoes")
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Profissional", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Uep", "Uep")
                        .WithMany()
                        .HasForeignKey("UepId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Profissional", "Verificador")
                        .WithMany()
                        .HasForeignKey("VerificadorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.Ativo", b =>
                {
                    b.HasOne("Automacao.Domain.Models.UnidadeOperativa", "UnidadeOperativa")
                        .WithMany("Ativos")
                        .HasForeignKey("UnidadeOperativaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.ClasseMaterial", b =>
                {
                    b.HasOne("Automacao.Domain.Models.CategoriaMaterial", "CategoriaMaterial")
                        .WithMany("ClasseMateriais")
                        .HasForeignKey("CategoriaMaterialId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.Esd", b =>
                {
                    b.HasOne("Automacao.Domain.Models.EventoIniciador", "EventoIniciador")
                        .WithMany("Esds")
                        .HasForeignKey("EventoIniciadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.MotivoCausa", "MotivoCausa")
                        .WithMany("Esds")
                        .HasForeignKey("MotivoCausaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.NivelOperacao", "NivelOperacao")
                        .WithMany("Esds")
                        .HasForeignKey("NivelOperacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.OrigemAgente", "OrigemAgente")
                        .WithMany("Esds")
                        .HasForeignKey("OrigemAgenteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Situacao", "Situacao")
                        .WithMany("Esds")
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.UepAlmoxarifado")
                        .WithMany("Esds")
                        .HasForeignKey("UepAlmoxarifadoId");

                    b.HasOne("Automacao.Domain.Models.Uep", "Uep")
                        .WithMany("Esds")
                        .HasForeignKey("UepId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.EsdArquivo", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Esd", "Esd")
                        .WithMany("Arquivos")
                        .HasForeignKey("EsdId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.EventoIniciador", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Evento", "Evento")
                        .WithMany("EventoIniciadores")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Iniciador", "Iniciador")
                        .WithMany("EventoIniciadores")
                        .HasForeignKey("IniciadorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.Historico", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Esd", "Esd")
                        .WithMany("Historicos")
                        .HasForeignKey("EsdId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.EventoIniciador", "EventoIniciador")
                        .WithMany("Historicos")
                        .HasForeignKey("EventoIniciadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.MotivoCausa", "MotivoCausa")
                        .WithMany("Historicos")
                        .HasForeignKey("MotivoCausaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.NivelOperacao", "NivelOperacao")
                        .WithMany("Historicos")
                        .HasForeignKey("NivelOperacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.OrigemAgente", "OrigemAgente")
                        .WithMany("Historicos")
                        .HasForeignKey("OrigemAgenteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Situacao", "Situacao")
                        .WithMany("Historicos")
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.UepAlmoxarifado")
                        .WithMany("Historicos")
                        .HasForeignKey("UepAlmoxarifadoId");

                    b.HasOne("Automacao.Domain.Models.Uep", "Uep")
                        .WithMany()
                        .HasForeignKey("UepId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.HistoricoAlteracao", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Alteracao", "Alteracao")
                        .WithMany("HistoricoAlteracoes")
                        .HasForeignKey("AlteracaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Profissional", "Aprovador")
                        .WithMany()
                        .HasForeignKey("AprovadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Profissional", "Autorizador")
                        .WithMany()
                        .HasForeignKey("AutorizadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Camada", "Camada")
                        .WithMany("HistoricoAlteracoes")
                        .HasForeignKey("CamadaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Profissional", "Executor")
                        .WithMany()
                        .HasForeignKey("ExecutorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Finalidade", "Finalidade")
                        .WithMany("HistoricoAlteracoes")
                        .HasForeignKey("FinalidadeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Funcao", "Funcao")
                        .WithMany("HistoricoAlteracoes")
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Sistema", "Sistema")
                        .WithMany("HistoricoAlteracoes")
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Situacao", "Situacao")
                        .WithMany("HistoricoAlteracoes")
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Profissional", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Uep", "Uep")
                        .WithMany()
                        .HasForeignKey("UepId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Profissional", "Verificador")
                        .WithMany()
                        .HasForeignKey("VerificadorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.MaterialEstocado", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Almoxarifado", "Almoxarifado")
                        .WithMany("MaterialEstocados")
                        .HasForeignKey("AlmoxarifadoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.MaterialFornecido", "MaterialFornecido")
                        .WithMany("MaterialEstocados")
                        .HasForeignKey("MaterialFornecidoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Mrp", "Mrp")
                        .WithMany("MaterialEstocados")
                        .HasForeignKey("MrpId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.SituacaoMaterial", "SituacaoMaterial")
                        .WithMany("MaterialEstocados")
                        .HasForeignKey("SituacaoMaterialId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.MaterialFornecido", b =>
                {
                    b.HasOne("Automacao.Domain.Models.ClasseMaterial", "ClasseMaterial")
                        .WithMany("MaterialFornecidos")
                        .HasForeignKey("ClasseMaterialId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Fabricante", "Fabricante")
                        .WithMany("MaterialFornecidos")
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.MotivoCausa", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Causa", "Causa")
                        .WithMany("MotivoCausas")
                        .HasForeignKey("CausaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Motivo", "Motivo")
                        .WithMany("MotivoCausas")
                        .HasForeignKey("MotivoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.Nivel", b =>
                {
                    b.HasOne("Automacao.Domain.Models.AnpNivel", "AnpNivel")
                        .WithMany("Niveis")
                        .HasForeignKey("AnpNivelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.NivelOperacao", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Nivel", "Nivel")
                        .WithMany("NivelOperacoes")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Operacao", "Operacao")
                        .WithMany("NivelOperacoes")
                        .HasForeignKey("OperacaoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.OrigemAgente", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Agente", "Agente")
                        .WithMany("OrigemAgentes")
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Origem", "Origem")
                        .WithMany("OrigemAgentes")
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.Uep", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Ativo", "Ativo")
                        .WithMany("Ueps")
                        .HasForeignKey("AtivoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Operacao", "Operacao")
                        .WithMany("Ueps")
                        .HasForeignKey("OperacaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Automacao.Domain.Models.UepTipo", "UepTipo")
                        .WithMany("Ueps")
                        .HasForeignKey("UepTipoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Domain.Models.UepAlmoxarifado", b =>
                {
                    b.HasOne("Automacao.Domain.Models.Almoxarifado", "Almoxarifado")
                        .WithMany("UepAlmoxarifados")
                        .HasForeignKey("AlmoxarifadoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Domain.Models.Uep", "Uep")
                        .WithMany("UepAlmoxarifados")
                        .HasForeignKey("UepId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
