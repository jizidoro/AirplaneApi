// <auto-generated />
using System;
using AirplaneProject.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirplaneProject.Infrastructure.Migrations
{
    [DbContext(typeof(GestaoEsdContext))]
    [Migration("20190906053211_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Automacao.Core.Models.Agente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrigemId");

                    b.HasKey("Id");

                    b.HasIndex("OrigemId");

                    b.ToTable("Agentes");
                });

            modelBuilder.Entity("Automacao.Core.Models.Ambiental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenteId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("Codigo")
                        .HasName("IX_Ambientais_Codigo");

                    b.ToTable("Ambientais");
                });

            modelBuilder.Entity("Automacao.Core.Models.AnpNivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AnpNiveis");
                });

            modelBuilder.Entity("Automacao.Core.Models.Ativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("UnidadeOperativaId");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_Ativos_Codigo");

                    b.HasIndex("UnidadeOperativaId");

                    b.ToTable("Ativos");
                });

            modelBuilder.Entity("Automacao.Core.Models.Causa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Causas_Codigo");

                    b.ToTable("Causas");
                });

            modelBuilder.Entity("Automacao.Core.Models.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgenteId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("Codigo")
                        .HasName("IX_Equipamentos_Codigo");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("Automacao.Core.Models.EquipamentoIniciadorUep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EquipamentoId");

                    b.Property<int>("IniciadorUepId");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentoId");

                    b.HasIndex("IniciadorUepId");

                    b.ToTable("EquipamentoIniciadorUeps");
                });

            modelBuilder.Entity("Automacao.Core.Models.Esd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenteId");

                    b.Property<DateTime>("DataEvento");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("DescricaoCodigo")
                        .HasMaxLength(512);

                    b.Property<int>("EquipamentoIniciadorUepId");

                    b.Property<int>("MotivoCausaId");

                    b.Property<int>("NivelUepId");

                    b.Property<int>("UepId");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("DescricaoCodigo")
                        .HasName("IX_Esds_Codigo");

                    b.HasIndex("EquipamentoIniciadorUepId");

                    b.HasIndex("MotivoCausaId");

                    b.HasIndex("NivelUepId");

                    b.HasIndex("UepId");

                    b.ToTable("Esds");
                });

            modelBuilder.Entity("Automacao.Core.Models.Historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataRegistro");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<int>("EsdId");

                    b.HasKey("Id");

                    b.HasIndex("EsdId");

                    b.ToTable("Historicos");
                });

            modelBuilder.Entity("Automacao.Core.Models.Humana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenteId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("Codigo")
                        .HasName("IX_Humanas_Codigo");

                    b.ToTable("Humanas");
                });

            modelBuilder.Entity("Automacao.Core.Models.Iniciador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Iniciadores_Codigo");

                    b.ToTable("Iniciadores");
                });

            modelBuilder.Entity("Automacao.Core.Models.IniciadorUep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IniciadorId");

                    b.Property<int>("UepId");

                    b.HasKey("Id");

                    b.HasIndex("IniciadorId");

                    b.HasIndex("UepId");

                    b.ToTable("IniciadorUeps");
                });

            modelBuilder.Entity("Automacao.Core.Models.Motivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Motivos_Codigo");

                    b.ToTable("Motivos");
                });

            modelBuilder.Entity("Automacao.Core.Models.MotivoCausa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CausaId");

                    b.Property<int>("MotivoId");

                    b.HasKey("Id");

                    b.HasIndex("CausaId");

                    b.HasIndex("MotivoId");

                    b.ToTable("MotivoCausas");
                });

            modelBuilder.Entity("Automacao.Core.Models.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnpNivelId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("AnpNivelId");

                    b.HasIndex("Codigo")
                        .HasName("IX_Niveis_Codigo");

                    b.ToTable("Niveis");
                });

            modelBuilder.Entity("Automacao.Core.Models.NivelUep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NivelId");

                    b.Property<int>("UepId");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.HasIndex("UepId");

                    b.ToTable("NivelUeps");
                });

            modelBuilder.Entity("Automacao.Core.Models.Origem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_Origens_Codigo");

                    b.ToTable("Origens");
                });

            modelBuilder.Entity("Automacao.Core.Models.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenteId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("Codigo")
                        .HasName("IX_Processos_Codigo");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("Automacao.Core.Models.Uep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AtivoId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UepTipoId");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_Ueps_Codigo");

                    b.HasIndex("UepTipoId");

                    b.ToTable("Ueps");
                });

            modelBuilder.Entity("Automacao.Core.Models.UepTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .HasName("IX_UepTipos_Codigo");

                    b.ToTable("UepTipos");
                });

            modelBuilder.Entity("Automacao.Core.Models.UnidadeOperativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasName("IX_UnidadesOperativas_Codigo");

                    b.ToTable("UnidadesOperativas");
                });

            modelBuilder.Entity("Automacao.Core.Models.Views.AgenteEspecificoView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenteGenericoId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("OrigemId");

                    b.HasKey("Id");

                    b.ToTable("vwAgenteEspecifico");
                });

            modelBuilder.Entity("Automacao.Core.Models.Views.AgenteGenericoView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenteId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("vwAgenteGenerico");
                });

            modelBuilder.Entity("Automacao.Core.Models.Views.AgenteOrigemView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("OrigemId");

                    b.Property<string>("OrigemNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("vwAgenteOrigem");
                });

            modelBuilder.Entity("Automacao.Core.Models.Views.EquipamentoIniciadorUepView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EquipamentoId");

                    b.Property<string>("EquipamentoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("IniciadorId");

                    b.Property<string>("IniciadorNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UepId");

                    b.Property<string>("UepNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("vwEquipamentoIniciadorUep");
                });

            modelBuilder.Entity("Automacao.Core.Models.Views.EsdView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgenteCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("AgenteId");

                    b.Property<string>("AgenteNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AtivoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("AtivoId");

                    b.Property<string>("AtivoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CausaCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("CausaId");

                    b.Property<string>("CausaNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DataEvento");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255);

                    b.Property<string>("DescricaoCodigo")
                        .HasMaxLength(255);

                    b.Property<string>("EquipamentoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("EquipamentoId");

                    b.Property<string>("EquipamentoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("IniciadorCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("IniciadorId");

                    b.Property<string>("IniciadorNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MotivoCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("MotivoId");

                    b.Property<string>("MotivoNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NivelCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("NivelId");

                    b.Property<string>("NivelNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("OrigemCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("OrigemId");

                    b.Property<string>("OrigemNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UepCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UepId");

                    b.Property<string>("UepNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UnidadeCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UnidadeId");

                    b.Property<string>("UnidadeNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("vwEsd");
                });

            modelBuilder.Entity("Automacao.Core.Models.Views.IniciadorUepView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IniciadorId");

                    b.Property<string>("IniciadorNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UepId");

                    b.Property<string>("UepNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("vwIniciadorUep");
                });

            modelBuilder.Entity("Automacao.Core.Models.Views.NivelUepView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NivelId");

                    b.Property<string>("NivelNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UepId");

                    b.Property<string>("UepNome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("vwNivelUep");
                });

            modelBuilder.Entity("Automacao.Core.Models.Agente", b =>
                {
                    b.HasOne("Automacao.Core.Models.Origem", "Origem")
                        .WithMany()
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.Ambiental", b =>
                {
                    b.HasOne("Automacao.Core.Models.Agente", "Agente")
                        .WithMany()
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.Ativo", b =>
                {
                    b.HasOne("Automacao.Core.Models.UnidadeOperativa", "UnidadeOperativa")
                        .WithMany("Ativos")
                        .HasForeignKey("UnidadeOperativaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.Equipamento", b =>
                {
                    b.HasOne("Automacao.Core.Models.Agente", "Agente")
                        .WithMany()
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.EquipamentoIniciadorUep", b =>
                {
                    b.HasOne("Automacao.Core.Models.Equipamento", "Equipamento")
                        .WithMany()
                        .HasForeignKey("EquipamentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Core.Models.IniciadorUep", "IniciadorUep")
                        .WithMany()
                        .HasForeignKey("IniciadorUepId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.Esd", b =>
                {
                    b.HasOne("Automacao.Core.Models.Agente", "Agente")
                        .WithMany()
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Core.Models.EquipamentoIniciadorUep", "EquipamentoIniciadorUep")
                        .WithMany()
                        .HasForeignKey("EquipamentoIniciadorUepId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Core.Models.MotivoCausa", "MotivoCausa")
                        .WithMany()
                        .HasForeignKey("MotivoCausaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Core.Models.NivelUep", "NivelUep")
                        .WithMany()
                        .HasForeignKey("NivelUepId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Core.Models.Uep", "Uep")
                        .WithMany()
                        .HasForeignKey("UepId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.Historico", b =>
                {
                    b.HasOne("Automacao.Core.Models.Esd", "Esd")
                        .WithMany("Historicos")
                        .HasForeignKey("EsdId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.Humana", b =>
                {
                    b.HasOne("Automacao.Core.Models.Agente", "Agente")
                        .WithMany()
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.IniciadorUep", b =>
                {
                    b.HasOne("Automacao.Core.Models.Iniciador", "Iniciador")
                        .WithMany()
                        .HasForeignKey("IniciadorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Core.Models.Uep", "Uep")
                        .WithMany()
                        .HasForeignKey("UepId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.MotivoCausa", b =>
                {
                    b.HasOne("Automacao.Core.Models.Causa", "Causa")
                        .WithMany("MotivoCausas")
                        .HasForeignKey("CausaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Core.Models.Motivo", "Motivo")
                        .WithMany("MotivoCausas")
                        .HasForeignKey("MotivoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.Nivel", b =>
                {
                    b.HasOne("Automacao.Core.Models.AnpNivel", "AnpNivel")
                        .WithMany("Niveis")
                        .HasForeignKey("AnpNivelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.NivelUep", b =>
                {
                    b.HasOne("Automacao.Core.Models.Nivel", "Nivel")
                        .WithMany("NivelUeps")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Core.Models.Uep", "Uep")
                        .WithMany("NivelUeps")
                        .HasForeignKey("UepId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.Processo", b =>
                {
                    b.HasOne("Automacao.Core.Models.Agente", "Agente")
                        .WithMany()
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Automacao.Core.Models.Uep", b =>
                {
                    b.HasOne("Automacao.Core.Models.Ativo", "Ativo")
                        .WithMany("Ueps")
                        .HasForeignKey("AtivoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Automacao.Core.Models.UepTipo", "UepTipo")
                        .WithMany("Ueps")
                        .HasForeignKey("UepTipoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
